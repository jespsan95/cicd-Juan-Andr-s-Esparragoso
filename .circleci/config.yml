version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0
  ggshield: gitguardian/ggshield@volatile

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cimg/node:20.5.1

jobs:
  test:
    <<: *defaults  
    steps:
      - checkout
      - run:
          name: Install ggshield
          command: |
            curl -L https://github.com/GitGuardian/ggshield/releases/latest/download/ggshield_linux_amd64 -o /usr/local/bin/ggshield
            chmod 777 -R /usr/local/bin/ggshield
            chmod +x /usr/local/bin/ggshield
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: npm install
      - run:
          name: Run lint
          command: npm run lint:report
      - run:
          name: Run tests
          command: npm run test:coverage
      - store_test_results:
          path: test-results.xml
      - sonarcloud/scan
      - run:
          name: GitGuardian Vulnerability Scan
          command: |
            curl -X POST -H "Authorization: Bearer $GITGUARDIAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"ref":"main"}' \
            https://api.gitguardian.com/v1/integrations/circleci/scan

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Pack package
          command: npm pack
      - run:
          name: Publish package
          command: npm publish --dry run
      - store_artifacts:
          path: ~/repo/my-awesome-package-1.1.0.tgz
          destination: package/release.tgz
      - store_artifacts:
          path: ~/repo/dist
          destination: dist
      - store_artifacts:
          path: ~/repo/docs
          destination: docs

            
workflows:
  test-deploy:
    jobs:
      - test:
          context: dev
          filters:
            tags:
              only: /^v.*/
      - deploy:
          context: dev
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/          